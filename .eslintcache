[{"D:\\0 lalaLan\\PERKULIAHAN\\SEMESTER 7\\SisRek\\Tugas\\Tubes\\MusicRecommendation-FE\\src\\pages\\musicRecommendation\\index.js":"1"},{"size":5184,"mtime":1608548757571,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":3,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":"6"},"1359lmp","D:\\0 lalaLan\\PERKULIAHAN\\SEMESTER 7\\SisRek\\Tugas\\Tubes\\MusicRecommendation-FE\\src\\pages\\musicRecommendation\\index.js",["7","8","9","10"],"import React, { useState } from 'react';\r\nimport {\r\n  Navbar,\r\n  Container,\r\n  Form,\r\n  Col,\r\n  Button,\r\n  FormControl,\r\n  InputGroup,\r\n  Alert,\r\n} from 'react-bootstrap';\r\nimport { getCookie } from '../../utils/cookie';\r\nimport { recommendation } from '../../services';\r\nimport { TableRecommendation } from '../../components';\r\nimport { logo } from '../../assets';\r\n\r\nconst MusicRecommendation = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [data, setData] = useState();\r\n  const [error, setError] = useState();\r\n  const name = JSON.parse(getCookie('name'));\r\n  console.log(name);\r\n\r\n  const Capitalize = (str) => {\r\n    return str.replace(/\\w\\S*/g, (txt) => {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n\r\n  const onRecommendClick = () => {\r\n    setLoading(true);\r\n    recommendation\r\n      .getRecommend(Capitalize(title))\r\n      .then((res) => {\r\n        if (res === 'Music not in Database') {\r\n          setError(\r\n            'Sorry, the song is not in our Database :( or you entered the wrong title'\r\n          );\r\n          setData();\r\n          setTitle();\r\n        } else if (res !== 'Music not in Database') {\r\n          console.log(res);\r\n          setData(res);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError(err.message);\r\n        setTitle();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const hideError = () => {\r\n    setError(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        sticky\r\n        style={{\r\n          paddingRight: '30px',\r\n          paddingLeft: '20px',\r\n          backgroundColor: 'rgb(59, 79, 119, 0.8)',\r\n        }}\r\n      >\r\n        <Navbar.Brand\r\n          style={{\r\n            fontWeight: 'bold',\r\n            fontSize: '30px',\r\n            color: 'white',\r\n            fontFamily: 'Permanent Marker, cursive',\r\n          }}\r\n        >\r\n          <img\r\n            style={{ width: '100px', marginRight: '-10px' }}\r\n            alt=\"logo\"\r\n            src={logo}\r\n          />\r\n          MuTion\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Navbar.Text\r\n            style={{\r\n              fontSize: '18px',\r\n              color: 'white',\r\n              textDecoration: 'underline',\r\n              fontFamily: 'Poiret One, cursive',\r\n            }}\r\n          >\r\n            {`Hi ${name}`}\r\n          </Navbar.Text>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      {error && (\r\n        <div style={{ position: 'fixed', width: '100%', textAlign: 'center' }}>\r\n          <Alert onClick={hideError} variant=\"danger\">\r\n            {error}\r\n          </Alert>\r\n        </div>\r\n      )}\r\n      <Container\r\n        style={{\r\n          paddingTop: '10px',\r\n          marginTop: '70px',\r\n          marginBottom: '50px',\r\n          width: '900px',\r\n          // maxHeight: '500px',\r\n          // backgroundColor: 'red',\r\n        }}\r\n      >\r\n        {name && (\r\n          <Form>\r\n            <Form.Row className=\"align-items-center\">\r\n              <Col xs=\"auto\">\r\n                <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                  Username\r\n                </Form.Label>\r\n                <InputGroup className=\"mb-2\">\r\n                  <FormControl\r\n                    style={{\r\n                      borderTopRightRadius: '0',\r\n                      borderBottomRightRadius: '0',\r\n                      borderTopLeftRadius: '5px',\r\n                      borderBottomLeftRadius: '5px',\r\n                      width: '400px',\r\n                    }}\r\n                    id=\"inlineFormInputGroup\"\r\n                    placeholder=\"What song do you like to hear?\"\r\n                    required\r\n                    onChange={(e) => {\r\n                      setTitle(e.target.value);\r\n                    }}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col\r\n                xs=\"auto\"\r\n                style={{\r\n                  marginLeft: '-10px',\r\n                }}\r\n              >\r\n                <Button\r\n                  style={{\r\n                    borderTopLeftRadius: '0',\r\n                    borderBottomLeftRadius: '0',\r\n                    borderTopRightRadius: '5px',\r\n                    borderBottomRightRadius: '5px',\r\n                    backgroundColor: 'rgb(59, 79, 119, 0.8)',\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"mb-2\"\r\n                  onClick={onRecommendClick}\r\n                >\r\n                  Recommend me\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        )}\r\n        {data && (\r\n          <>\r\n            <div style={{ fontWeight: 'bold', color: 'white', margin: '20px' }}>\r\n              <h2>Made for you</h2>\r\n              <h6>Get better recommendations the more you listen.</h6>\r\n            </div>\r\n            <TableRecommendation data={data} />\r\n          </>\r\n        )}\r\n      </Container>\r\n      {loading && <p>Loading...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MusicRecommendation;\r\n",{"ruleId":"11","severity":2,"message":"12","line":23,"column":3,"nodeType":"13","messageId":"14","endLine":23,"endColumn":6},{"ruleId":"15","severity":2,"message":"16","line":23,"column":3,"nodeType":"17","messageId":"18","endLine":23,"endColumn":6},{"ruleId":"19","severity":2,"message":"20","line":23,"column":6,"nodeType":"13","messageId":"21","endLine":24,"endColumn":1,"fix":"22"},{"ruleId":"23","severity":1,"message":"24","line":43,"column":11,"nodeType":"25","messageId":"26","endLine":43,"endColumn":22},"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-undef","'log' is not defined.","Identifier","undef","semi","Missing semicolon.","missingSemi",{"range":"27","text":"28"},"no-console","Unexpected console statement.","MemberExpression","unexpected",[629,629],";"]